/* Generated By:JavaCC: Do not edit this line. MiniJavaConstants.java */
package parser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface MiniJavaConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int GT = 7;
  /** RegularExpression Id. */
  int LT = 8;
  /** RegularExpression Id. */
  int OP = 9;
  /** RegularExpression Id. */
  int CP = 10;
  /** RegularExpression Id. */
  int OB = 11;
  /** RegularExpression Id. */
  int CB = 12;
  /** RegularExpression Id. */
  int OS = 13;
  /** RegularExpression Id. */
  int CS = 14;
  /** RegularExpression Id. */
  int CM = 15;
  /** RegularExpression Id. */
  int EQL = 16;
  /** RegularExpression Id. */
  int NOT = 17;
  /** RegularExpression Id. */
  int PER = 18;
  /** RegularExpression Id. */
  int AND = 19;
  /** RegularExpression Id. */
  int ADD = 20;
  /** RegularExpression Id. */
  int SUB = 21;
  /** RegularExpression Id. */
  int MUT = 22;
  /** RegularExpression Id. */
  int INT = 23;
  /** RegularExpression Id. */
  int INTA = 24;
  /** RegularExpression Id. */
  int BOOLEAN = 25;
  /** RegularExpression Id. */
  int IF = 26;
  /** RegularExpression Id. */
  int ELSE = 27;
  /** RegularExpression Id. */
  int WHILE = 28;
  /** RegularExpression Id. */
  int CLASS = 29;
  /** RegularExpression Id. */
  int PUBLIC = 30;
  /** RegularExpression Id. */
  int STATIC = 31;
  /** RegularExpression Id. */
  int VOID = 32;
  /** RegularExpression Id. */
  int EXTENDS = 33;
  /** RegularExpression Id. */
  int RETURN = 34;
  /** RegularExpression Id. */
  int THIS = 35;
  /** RegularExpression Id. */
  int TRUE = 36;
  /** RegularExpression Id. */
  int FALSE = 37;
  /** RegularExpression Id. */
  int NEW = 38;
  /** RegularExpression Id. */
  int SEMICOLON = 39;
  /** RegularExpression Id. */
  int UNDERSCORE = 40;
  /** RegularExpression Id. */
  int LENGTH = 41;
  /** RegularExpression Id. */
  int __main__ = 42;
  /** RegularExpression Id. */
  int __stringa__ = 43;
  /** RegularExpression Id. */
  int INTLITERAL = 44;
  /** RegularExpression Id. */
  int IDENTIFIER = 45;
  /** RegularExpression Id. */
  int INVALID = 46;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "<token of kind 1>",
    "<token of kind 2>",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\" \"",
    "\">\"",
    "\"<\"",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\"[\"",
    "\"]\"",
    "\",\"",
    "\"=\"",
    "\"!\"",
    "\".\"",
    "\"&&\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"int\"",
    "\"int[]\"",
    "\"boolean\"",
    "\"if\"",
    "\"else\"",
    "\"while\"",
    "\"class\"",
    "\"public\"",
    "\"static\"",
    "\"void\"",
    "\"extends\"",
    "\"return\"",
    "\"this\"",
    "\"true\"",
    "\"false\"",
    "\"new\"",
    "\";\"",
    "\"_\"",
    "\"length\"",
    "\"main\"",
    "\"String[]\"",
    "<INTLITERAL>",
    "<IDENTIFIER>",
    "<INVALID>",
    "\"System.out.println\"",
  };

}
